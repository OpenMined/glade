name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('cli/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: cli/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('cli/Cargo.lock') }}

      - name: Check formatting
        if: matrix.os != 'windows-latest'
        run: cd rust && cargo fmt -- --check

      - name: Run clippy
        if: matrix.os != 'windows-latest'
        run: cd rust && cargo clippy -- -D warnings

      - name: Run tests
        run: cd rust && cargo test --verbose

      - name: Build
        run: cd rust && cargo build --verbose